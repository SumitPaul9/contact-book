[{"C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\index.js":"1","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\reportWebVitals.js":"2","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\App.js":"3","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\components\\Navbar.js":"4","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\container\\ContactList.js":"5","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\components\\Contact.js":"6","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\store.js":"7","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\reducers\\rootReducer.js":"8","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\reducers\\contactReducer.js":"9","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\actions\\constants.js":"10","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\actions\\contactActions.js":"11","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\container\\AddContact.js":"12","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\container\\UpdateContact.js":"13"},{"size":509,"mtime":1610094149611,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":815,"mtime":1610255894769,"results":"17","hashOfConfig":"15"},{"size":536,"mtime":1610205345945,"results":"18","hashOfConfig":"15"},{"size":2214,"mtime":1610193139910,"results":"19","hashOfConfig":"15"},{"size":1428,"mtime":1610259499032,"results":"20","hashOfConfig":"15"},{"size":244,"mtime":1610111236504,"results":"21","hashOfConfig":"15"},{"size":199,"mtime":1610111223560,"results":"22","hashOfConfig":"15"},{"size":9506,"mtime":1610111449263,"results":"23","hashOfConfig":"15"},{"size":353,"mtime":1610096073187,"results":"24","hashOfConfig":"15"},{"size":931,"mtime":1610188616702,"results":"25","hashOfConfig":"15"},{"size":2388,"mtime":1610207493236,"results":"26","hashOfConfig":"15"},{"size":2757,"mtime":1610257951364,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"g5jxac",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\index.js",[],["59","60"],"C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\reportWebVitals.js",[],"C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\App.js",[],"C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\components\\Navbar.js",[],"C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\container\\ContactList.js",["61"],"import { useDispatch, useSelector } from 'react-redux';\r\nimport Contact from '../components/Contact';\r\nimport { deleteAllContact, clearAllContact, selectAllContact } from '../actions/contactActions'\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector((state) => state.contact.contacts);\r\n  const selectedContacts = useSelector(state => state.contact.selectedContacts)\r\n  const [selectAll, setSelectAll] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(selectAll){\r\n      dispatch(selectAllContact(contacts.map((contact)=> contact.id)))\r\n    } else{\r\n      dispatch(clearAllContact());\r\n    }\r\n  }, [selectAll])\r\n    \r\n  return (\r\n        <div className=\"container\">\r\n          \r\n          { selectedContacts.length > 0 ? (\r\n              <button\r\n                className=\"btn btn-danger mb-3\"\r\n                onClick={()=>dispatch(deleteAllContact())}\r\n              > Delete all</button>\r\n            ) : null\r\n          }\r\n\r\n            <table className=\"table shadow\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                      <input \r\n                          type=\"checkbox\" \r\n                          className=\"custom-control-input\"\r\n                          id=\"selectAll\"\r\n                          value={selectAll}\r\n                          onClick={ ()=>setSelectAll(!selectAll)}\r\n                      />\r\n                      <label\r\n                          htmlFor=\"selectAll\"\r\n                          className=\"custom-control-label\"\r\n                      ></label>\r\n                    </div>\r\n                  </th>\r\n\r\n                  <th>Name</th>\r\n                  <th>Phone</th>\r\n                  <th>Email</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { contacts.map((contact)=>(\r\n                    <Contact contact={contact} key={ contact.id } selectAll={selectAll}/>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactList\r\n","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\components\\Contact.js",["62"],"C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\store.js",[],"C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\reducers\\rootReducer.js",[],"C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\reducers\\contactReducer.js",["63","64","65"],"import { CREATE_CONTACT,\r\n        GET_CONTACT,\r\n        UPDATE_CONTACT,\r\n        DELETE_CONTACT,\r\n        SELECT_CONTACT,\r\n        CLEAR_CONTACT,\r\n        DELETE_SELECTED_CONTACT } from '../actions/constants';\r\n        \r\nconst initialState = {\r\n    contacts: [{\r\n            id: 1,\r\n            name: \"Leanne Graham\",\r\n            username: \"Bret\",\r\n            email: \"Sincere@april.biz\",\r\n            address: {\r\n                street: \"Kulas Light\",\r\n                suite: \"Apt. 556\",\r\n                city: \"Gwenborough\",\r\n                zipcode: \"92998-3874\",\r\n                geo: {\r\n                    lat: \"-37.3159\",\r\n                    lng: \"81.1496\",\r\n                },\r\n            },\r\n            phone: \"1-770-736-8031 x56442\",\r\n            website: \"hildegard.org\",\r\n            company: {\r\n                name: \"Romaguera-Crona\",\r\n                catchPhrase: \"Multi-layered client-server neural-net\",\r\n                bs: \"harness real-time e-markets\",\r\n            },\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Ervin Howell\",\r\n            username: \"Antonette\",\r\n            email: \"Shanna@melissa.tv\",\r\n            address: {\r\n                street: \"Victor Plains\",\r\n                suite: \"Suite 879\",\r\n                city: \"Wisokyburgh\",\r\n                zipcode: \"90566-7771\",\r\n                geo: {\r\n                    lat: \"-43.9509\",\r\n                    lng: \"-34.4618\",\r\n                },\r\n            },\r\n            phone: \"010-692-6593 x09125\",\r\n            website: \"anastasia.net\",\r\n            company: {\r\n                name: \"Deckow-Crist\",\r\n                catchPhrase: \"Proactive didactic contingency\",\r\n                bs: \"synergize scalable supply-chains\",\r\n            },\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Clementine Bauch\",\r\n            username: \"Samantha\",\r\n            email: \"Nathan@yesenia.net\",\r\n            address: {\r\n                street: \"Douglas Extension\",\r\n                suite: \"Suite 847\",\r\n                city: \"McKenziehaven\",\r\n                zipcode: \"59590-4157\",\r\n                geo: {\r\n                    lat: \"-68.6102\",\r\n                    lng: \"-47.0653\",\r\n                },\r\n            },\r\n            phone: \"1-463-123-4447\",\r\n            website: \"ramiro.info\",\r\n            company: {\r\n                name: \"Romaguera-Jacobson\",\r\n                catchPhrase: \"Face to face bifurcated interface\",\r\n                bs: \"e-enable strategic applications\",\r\n            },\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Patricia Lebsack\",\r\n            username: \"Karianne\",\r\n            email: \"Julianne.OConner@kory.org\",\r\n            address: {\r\n                street: \"Hoeger Mall\",\r\n                suite: \"Apt. 692\",\r\n                city: \"South Elvis\",\r\n                zipcode: \"53919-4257\",\r\n                geo: {\r\n                    lat: \"29.4572\",\r\n                    lng: \"-164.2990\",\r\n                },\r\n            },\r\n            phone: \"493-170-9623 x156\",\r\n            website: \"kale.biz\",\r\n            company: {\r\n                name: \"Robel-Corkery\",\r\n                catchPhrase: \"Multi-tiered zero tolerance productivity\",\r\n                bs: \"transition cutting-edge web services\",\r\n            },\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Chelsey Dietrich\",\r\n            username: \"Kamren\",\r\n            email: \"Lucio_Hettinger@annie.ca\",\r\n            address: {\r\n                street: \"Skiles Walks\",\r\n                suite: \"Suite 351\",\r\n                city: \"Roscoeview\",\r\n                zipcode: \"33263\",\r\n                geo: {\r\n                    lat: \"-31.8129\",\r\n                    lng: \"62.5342\",\r\n                },\r\n            },\r\n            phone: \"(254)954-1289\",\r\n            website: \"demarco.info\",\r\n            company: {\r\n                name: \"Keebler LLC\",\r\n                catchPhrase: \"User-centric fault-tolerant solution\",\r\n                bs: \"revolutionize end-to-end systems\",\r\n            },\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Mrs. Dennis Schulist\",\r\n            username: \"Leopoldo_Corkery\",\r\n            email: \"Karley_Dach@jasper.info\",\r\n            address: {\r\n                street: \"Norberto Crossing\",\r\n                suite: \"Apt. 950\",\r\n                city: \"South Christy\",\r\n                zipcode: \"23505-1337\",\r\n                geo: {\r\n                    lat: \"-71.4197\",\r\n                    lng: \"71.7478\",\r\n                },\r\n            },\r\n            phone: \"1-477-935-8478 x6430\",\r\n            website: \"ola.org\",\r\n            company: {\r\n                name: \"Considine-Lockman\",\r\n                catchPhrase: \"Synchronised bottom-line interface\",\r\n                bs: \"e-enable innovative applications\",\r\n            },\r\n        },\r\n        {\r\n            id: 7,\r\n            name: \"Kurtis Weissnat\",\r\n            username: \"Elwyn.Skiles\",\r\n            email: \"Telly.Hoeger@billy.biz\",\r\n            address: {\r\n                street: \"Rex Trail\",\r\n                suite: \"Suite 280\",\r\n                city: \"Howemouth\",\r\n                zipcode: \"58804-1099\",\r\n                geo: {\r\n                    lat: \"24.8918\",\r\n                    lng: \"21.8984\",\r\n                },\r\n            },\r\n            phone: \"210.067.6132\",\r\n            website: \"elvis.io\",\r\n            company: {\r\n                name: \"Johns Group\",\r\n                catchPhrase: \"Configurable multimedia task-force\",\r\n                bs: \"generate enterprise e-tailers\",\r\n            },\r\n        },\r\n        {\r\n            id: 8,\r\n            name: \"Nicholas Runolfsdottir V\",\r\n            username: \"Maxime_Nienow\",\r\n            email: \"Sherwood@rosamond.me\",\r\n            address: {\r\n                street: \"Ellsworth Summit\",\r\n                suite: \"Suite 729\",\r\n                city: \"Aliyaview\",\r\n                zipcode: \"45169\",\r\n                geo: {\r\n                    lat: \"-14.3990\",\r\n                    lng: \"-120.7677\",\r\n                },\r\n            },\r\n            phone: \"586.493.6943 x140\",\r\n            website: \"jacynthe.com\",\r\n            company: {\r\n                name: \"Abernathy Group\",\r\n                catchPhrase: \"Implemented secondary concept\",\r\n                bs: \"e-enable extensible e-tailers\",\r\n            },\r\n        },\r\n        {\r\n            id: 9,\r\n            name: \"Glenna Reichert\",\r\n            username: \"Delphine\",\r\n            email: \"Chaim_McDermott@dana.io\",\r\n            address: {\r\n                street: \"Dayna Park\",\r\n                suite: \"Suite 449\",\r\n                city: \"Bartholomebury\",\r\n                zipcode: \"76495-3109\",\r\n                geo: {\r\n                    lat: \"24.6463\",\r\n                    lng: \"-168.8889\",\r\n                },\r\n            },\r\n            phone: \"(775)976-6794 x41206\",\r\n            website: \"conrad.com\",\r\n            company: {\r\n                name: \"Yost and Sons\",\r\n                catchPhrase: \"Switchable contextually-based project\",\r\n                bs: \"aggregate real-time technologies\",\r\n            },\r\n        },\r\n        {\r\n            id: 10,\r\n            name: \"Clementina DuBuque\",\r\n            username: \"Moriah.Stanton\",\r\n            email: \"Rey.Padberg@karina.biz\",\r\n            address: {\r\n                street: \"Kattie Turnpike\",\r\n                suite: \"Suite 198\",\r\n                city: \"Lebsackbury\",\r\n                zipcode: \"31428-2261\",\r\n                geo: {\r\n                    lat: \"-38.2386\",\r\n                    lng: \"57.2232\",\r\n                },\r\n            },\r\n            phone: \"024-648-3804\",\r\n            website: \"ambrose.net\",\r\n            company: {\r\n                name: \"Hoeger LLC\",\r\n                catchPhrase: \"Centralized empowering task-force\",\r\n                bs: \"target end-to-end models\",\r\n            },\r\n        },\r\n    ],\r\n    contact: null,\r\n    selectedContacts: [],\r\n};\r\n\r\n\r\n\r\nexport const contactReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case CREATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.payload],\r\n            };\r\n\r\n        case GET_CONTACT:\r\n            let arr = state.contacts.filter(\r\n                (contact) => contact.id == action.payload\r\n            );\r\n            arr = arr.values();\r\n            for (let val of arr) {\r\n                arr = val; \r\n            }\r\n            return {\r\n                ...state,\r\n                contact: arr,\r\n            };\r\n\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map((contact) =>\r\n                    contact.id == action.payload.id ? action.payload : contact\r\n                ),\r\n            };\r\n\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    (contact) => contact.id != action.payload\r\n                ),\r\n            };\r\n\r\n        case DELETE_SELECTED_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [],\r\n            };\r\n\r\n        case SELECT_CONTACT:\r\n            return {\r\n                ...state,\r\n                selectedContacts: action.payload,\r\n            };\r\n\r\n        case CLEAR_CONTACT:\r\n            return {\r\n                ...state,\r\n                selectedContacts: [],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\actions\\constants.js",[],"C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\actions\\contactActions.js",[],"C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\container\\AddContact.js",["66"],"import { useState} from 'react';\r\nimport { useDispatch} from 'react-redux';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport shortid from 'shortid';\r\nimport { createContact } from '../actions/contactActions';\r\n\r\nconst AddContact = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState(\"\");\r\n    const [phoneNumber, setphoneNumber] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const newContact = {\r\n        id: shortid.generate(),\r\n        name: name,\r\n        phone: phoneNumber,\r\n        email: email,\r\n    }\r\n\r\n    const create_Contact = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(createContact(newContact));\r\n        history.push(\"/\");\r\n        // <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <div className=\"card border-0 shadow\">\r\n            <div className=\"card-header\">Add a Contact</div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={(e) => create_Contact(e)}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter Your Phone Number\"\r\n                        value={phoneNumber}\r\n                        onChange={(e) => setphoneNumber(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter Your E-mail Address\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Create Contact\r\n                </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddContact\r\n","C:\\Users\\sumit\\Desktop\\Contact book\\contactbook\\src\\container\\UpdateContact.js",["67"],"\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getContact, updateContact } from '../actions/contactActions';\r\n\r\n\r\nconst UpdateContact = () => {\r\n    \r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState(\"\");\r\n    const [phoneNumber, setphoneNumber] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    \r\n    const contact = useSelector(state => state.contact.contact)\r\n\r\n    useEffect(() => {\r\n        \r\n        if (contact != null) {\r\n          setName(contact.name);\r\n          setphoneNumber(contact.phone);\r\n          setEmail(contact.email);\r\n        }\r\n        dispatch(getContact(id));\r\n      }, [contact]);\r\n\r\n    const update_Contact = {\r\n        id: id,\r\n        name: name,\r\n        phone: phoneNumber,\r\n        email: email,\r\n    }\r\n\r\n    const OnupdateContact = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(updateContact(update_Contact));\r\n        history.push(\"/\");\r\n        // <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"card border-0 shadow\">\r\n            <div className=\"card-header\">Update Contact</div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={(e) => OnupdateContact(e)}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter Your Phone Number\"\r\n                        value={phoneNumber}\r\n                        onChange={(e) => setphoneNumber(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter Your E-mail Address\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Update Contact\r\n                </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateContact\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":18,"column":6,"nodeType":"74","endLine":18,"endColumn":17,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":258,"column":41,"nodeType":"82","messageId":"83","endLine":258,"endColumn":43},{"ruleId":"80","severity":1,"message":"81","line":273,"column":32,"nodeType":"82","messageId":"83","endLine":273,"endColumn":34},{"ruleId":"80","severity":1,"message":"84","line":281,"column":45,"nodeType":"82","messageId":"83","endLine":281,"endColumn":47},{"ruleId":"76","severity":1,"message":"85","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":18},{"ruleId":"72","severity":1,"message":"86","line":27,"column":10,"nodeType":"74","endLine":27,"endColumn":19,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'contacts' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["90"],"no-unused-vars","'EditIcon' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [contacts, dispatch, selectAll]",{"range":"96","text":"97"},"Update the dependencies array to be: [contact, dispatch, id]",{"range":"98","text":"99"},[691,702],"[contacts, dispatch, selectAll]",[827,836],"[contact, dispatch, id]"]